{"version":3,"sources":["components/Competition/Competition.jsx","components/UI/error/errorMessages.js","api/api.js","store/slices/competitionsSlice.js","components/UI/input/Input.jsx","components/UI/button/Button.jsx","components/SearchBar/SearchBar.jsx","components/UI/navbar/Navbar.jsx","components/Header/Header.jsx","components/UI/error/Error.jsx","components/UI/content/Content.jsx","components/CompList/CompList.jsx","store/slices/matchesSlice.js","components/UI/date-input/DateInput.jsx","components/UI/date-picker/DatePicker.jsx","components/UI/table/Tablemobile.jsx","components/UI/button/AddButton.jsx","components/UI/matchlist/MatchList.jsx","components/Matches/Matches.jsx","store/slices/standingsSlice.js","components/Standings/Standings.jsx","store/slices/singleTeamSlice.js","components/TeamCalendar/TeamCalendar.jsx","store/slices/teamsSlice.js","components/TeamList/TeamList.jsx","components/Footer/Footer.jsx","components/App/App.jsx","store/store.js","index.js"],"names":["Comptetition","competition","className","to","id","src","process","alt","name","area","errorMessages","emptyList","noResponse","BASE_URL","headers","getCompetitions","a","plan","axios","get","params","response","data","Error","getSchedule","competitionId","getTeams","getMatches","dateFrom","dateTo","getTeamMatches","teamId","limit","initialState","createEntityAdapter","getInitialState","competitions","status","error","fetchCompetitions","createAsyncThunk","api","competitionsSlice","createSlice","reducers","extraReducers","pending","state","fulfilled","action","payload","message","rejected","Input","props","type","placeholder","Button","isValid","rest","disabled","SearchBar","filter","setFilter","getFilteredList","onSubmit","value","onChange","e","target","Navbar","activeStyle","fontWeight","color","borderBottom","exact","Header","history","useHistory","location","useLocation","pathname","onClick","push","includes","goBack","Content","content","competitionStatus","children","length","CompList","dispatch","useDispatch","filtered","useParams","useSelector","useState","filteredData","setFilteredData","useEffect","undefined","filteredList","toLowerCase","preventDefault","map","fetchMatches","matchesSlice","matches","applyFilter","DateInput","pattern","DatePicker","filterMatches","Tablemobile","date","onematch","utcDate","Date","parse","toLocaleString","slice","homeTeam","toString","score","fullTime","awayTeam","MatchList","setLimit","setValid","AddButton","Matches","standingsSlice","standings","filteredStandings","standing","table","shift","Standings","team","position","crestUrl","playedGames","won","draw","lost","points","fetchSingleTeam","singleTeamSlice","calendar","TeamCalendar","fetchTeams","teamsSlice","teams","season","TeamList","teamStatus","tla","founded","Footer","href","rel","App","path","render","component","store","configureStore","reducer","competitionReducer","teamsReducer","standingsReducer","matchesReducer","singleTeamReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4513ed6f.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Comptetition({ competition }) {\n    const url = process.env.REACT_APP_PUBLIC_URL || \"http://localhost:3000\";\n    return (\n        <NavLink className=\"complist__link\" to={`/competitions/${competition.id}/teams`}>\n            <li className=\"complist__item\">\n                <img className=\"complist__item-image\" src={`${url}/images/${competition.id}.png`} alt=\"item\" />\n\n                <p className=\"complist__item-name\">{competition.name}</p>\n                <p className=\"complist__item-country\">{competition.area.name}</p>\n            </li>\n        </NavLink>\n    );\n}\n\nexport default Comptetition;\n","const errorMessages = {\n    emptyList: \"Ничего не найдено\",\n    noResponse: \"Произошла ошибка при загрузке данных с сервера\",\n};\n\nexport default errorMessages;\n","import axios from \"axios\";\nimport errorMessages from \"../components/UI/error/errorMessages\";\n\nconst BASE_URL = \"http://api.football-data.org/v2/\";\nconst headers = {\n    \"X-Auth-Token\": process.env.REACT_APP_API_TOKEN,\n};\n\nexport const getCompetitions = async (plan = \"TIER_ONE\") => {\n    try {\n        const response = await axios.get(`${BASE_URL}competitions`, {\n            headers,\n            params: {\n                plan,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        return new Error(errorMessages.noResponse);\n    }\n};\n\nexport const getCompetition = async (competitionId) => {\n    try {\n        const response = await axios.get(`${BASE_URL}competitions/${competitionId}`, {\n            headers,\n        });\n        return response.data;\n    } catch (error) {\n        return new Error(errorMessages.noResponse);\n    }\n};\n\nexport const getSchedule = async (competitionId) => {\n    try {\n        const response = await axios.get(`${BASE_URL}competitions/${competitionId}/standings`, {\n            headers,\n        });\n        return response.data;\n    } catch (error) {\n        return new Error(errorMessages.noResponse);\n    }\n};\n\nexport const getTeams = async (competitionId) => {\n    try {\n        const response = await axios.get(`${BASE_URL}competitions/${competitionId}/teams`, {\n            headers,\n        });\n        return response.data;\n    } catch (error) {\n        return new Error(errorMessages.noResponse);\n    }\n};\n\nexport const getMatches = async ({ competitionId, dateFrom, dateTo }) => {\n    try {\n        const response = await axios.get(`${BASE_URL}competitions/${competitionId}/matches`, {\n            headers,\n            params: {\n                dateFrom,\n                dateTo,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        return new Error(errorMessages.noResponse);\n    }\n};\n\nexport const getTeamMatches = async ({ teamId, dateFrom, dateTo, limit }) => {\n    try {\n        const response = await axios.get(`${BASE_URL}teams/${teamId}/matches`, {\n            headers,\n            params: {\n                dateFrom,\n                dateTo,\n                limit,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        return new Error(errorMessages.noResponse);\n    }\n};\n","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport * as api from \"../../api/api\";\n\nconst compAdapter = createEntityAdapter();\n\nconst initialState = compAdapter.getInitialState({\n    competitions: [],\n    status: \"idle\",\n    error: \"\",\n});\n\nexport const fetchCompetitions = createAsyncThunk(\"competitions/fetchCompetitions\", () => {\n    return api.getCompetitions();\n});\n\nexport const competitionsSlice = createSlice({\n    name: \"competitions\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchCompetitions.pending]: (state) => {\n            state.status = \"loading\";\n        },\n        [fetchCompetitions.fulfilled]: (state, action) => {\n            state.status = \"succeeded\";\n            state.competitions = action.payload.competitions ? action.payload.competitions : [];\n            state.error = action.payload.message;\n        },\n        [fetchCompetitions.rejected]: (state, action) => {\n            state.status = \"failed\";\n            state.error = action.error.message;\n        },\n    },\n});\n\nexport default competitionsSlice.reducer;\n","import React from \"react\";\n\nfunction Input(props) {\n    return <input {...props} type=\"text\" className=\"search-bar__input\" placeholder=\"Поиск\"></input>;\n}\n\nexport default Input;\n","import React from \"react\";\n\nfunction Button(props) {\n    const { isValid, ...rest } = props;\n    return (\n        <button\n            {...rest}\n            disabled={!props.isValid}\n            className={`search-bar__button ${!props.isValid ? \"search-bar__button_disabled\" : \"\"}`}\n        >\n            Найти\n        </button>\n    );\n}\n\nexport default Button;\n","import React from \"react\";\nimport Input from \"../UI/input/Input.jsx\";\nimport Button from \"../UI/button/Button.jsx\";\n\nfunction SearchBar({ filter, setFilter, getFilteredList }) {\n    return (\n        <form className=\"search-bar\" onSubmit={getFilteredList}>\n            {\" \"}\n            <Input\n                value={filter || \"\"}\n                onChange={(e) => {\n                    setFilter(e.target.value);\n                }}\n            />\n            <Button isValid={true} />\n        </form>\n    );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nfunction Navbar({ competitionId, dateFrom, dateTo }) {\n    return (\n        <nav className=\"navbar\">\n            <Link className=\"navbar__link\" to=\"/\">\n                Главная\n            </Link>\n\n            <NavLink\n                activeStyle={{\n                    fontWeight: \"bold\",\n                    color: \"#7df9ff\",\n                    borderBottom: \"thick solid\",\n                }}\n                className=\"navbar__link\"\n                to={`/competitions/${competitionId}/teams/`}\n            >\n                Команды\n            </NavLink>\n            <NavLink\n                activeStyle={{\n                    fontWeight: \"bold\",\n                    color: \"#7df9ff\",\n                    borderBottom: \"thick solid\",\n                }}\n                className=\"navbar__link\"\n                exact\n                to={`/competitions/${competitionId}/standings/`}\n            >\n                Таблица\n            </NavLink>\n            <NavLink\n                activeStyle={{\n                    fontWeight: \"bold\",\n                    color: \"#7df9ff\",\n                    borderBottom: \"thick solid\",\n                }}\n                className=\"navbar__link\"\n                to={\n                    `/competitions/${competitionId}/matches/` ||\n                    `/competitions/${competitionId}/matches/${dateFrom}/${dateTo}`\n                }\n            >\n                Матчи\n            </NavLink>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Navbar from \"../UI/navbar/Navbar.jsx\";\n\nfunction Header({ competition, competitionId, teamId, dateFrom, dateTo }) {\n    const history = useHistory();\n    const location = useLocation();\n    const goBack = () => {\n        history.goBack();\n    };\n    const url = process.env.REACT_APP_PUBLIC_URL || \"http://localhost:3000\";\n\n    return (\n        <header className=\"header\">\n            <div className={`header__container ${location.pathname === \"/\" ? \"\" : \"header__container_disabled\"}`}>\n                <div className=\"header__link\" onClick={() => history.push(\"/\")}>\n                    <img className=\"header__logo\" src={`${url}/images/logo.svg`} alt=\"logo\" />\n                </div>\n                <h1 className=\"header__title\">{competition ? competition.name : \"SoccerStat\"}</h1>\n            </div>\n            {competitionId ? <Navbar competitionId={competitionId} dateFrom={dateFrom} dateTo={dateTo}></Navbar> : \"\"}\n            {location.pathname.includes(`/teams/${teamId}/matches/`) ? (\n                <div className=\"header__link navbar__link\" onClick={() => goBack()}>\n                    Назад\n                </div>\n            ) : (\n                \"\"\n            )}\n        </header>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Error({ message }) {\n    return <div className=\"error\">{message}</div>;\n}\n\nexport default Error;\n","import React from \"react\";\nimport Error from \"../error/Error.jsx\";\nimport errorMessages from \"../error/errorMessages\";\n\nfunction Content({ competitionStatus, data, children, error, competition }) {\n    let content;\n\n    if (competitionStatus === \"loading\") {\n        content = <div className=\"content__loader\">Загрузка...</div>;\n    } else if (error) {\n        content = <Error message={error || errorMessages.noResponse} />;\n    } else if (competitionStatus === \"succeeded\" && data.length !== 0) {\n        content = children;\n    } else if (competitionStatus === \"succeeded\" && data.length === 0) {\n        content = <Error message={errorMessages.emptyList} />;\n    } else {\n        content = <Error message={errorMessages.emptyList} />;\n    }\n\n    return <div className=\"content\"> {content} </div>;\n}\n\nexport default Content;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Comptetition from \"../Competition/Competition.jsx\";\nimport { fetchCompetitions } from \"../../store/slices/competitionsSlice\";\nimport SearchBar from \"../SearchBar/SearchBar.jsx\";\nimport Header from \"../Header/Header.jsx\";\n\nimport Content from \"../UI/content/Content.jsx\";\n\nfunction CompList() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { filtered } = useParams();\n    const competitions = useSelector((state) => state.competitions.competitions);\n    const competitionStatus = useSelector((state) => state.competitions.status);\n    const error = useSelector((state) => state.competitions.error);\n    const [filter, setFilter] = useState(filtered || \"\");\n    const [filteredData, setFilteredData] = useState(\"\");\n\n    useEffect(() => {\n        if (competitionStatus === \"idle\") {\n            dispatch(fetchCompetitions());\n        }\n    }, [competitionStatus, dispatch]);\n\n    useEffect(() => {\n        if (filtered !== \"\" && filtered !== undefined) {\n            const filteredList = competitions.filter((competition) =>\n                competition.name.toLowerCase().includes(filter.toLowerCase()),\n            );\n            setFilteredData(filteredList);\n        }\n    }, [competitionStatus]);\n\n    const getFilteredList = (e) => {\n        e.preventDefault();\n        const filteredList = competitions.filter((competition) =>\n            competition.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n        setFilteredData(filteredList);\n        history.push(`/${filter}`);\n    };\n\n    const filteredList = () => {\n        let data;\n        if (filteredData) {\n            data = filteredData;\n        } else if (competitions !== undefined) {\n            data = competitions;\n        } else {\n            data = error;\n        }\n\n        return data;\n    };\n\n    return (\n        <section className=\"complist\">\n            <Header></Header>\n            <div className=\"complist__title-bar\">\n                {\" \"}\n                <SearchBar filter={filter} setFilter={setFilter} getFilteredList={getFilteredList}></SearchBar>\n            </div>\n            <Content competitionStatus={competitionStatus} data={filteredList()} error={error}>\n                <ul className=\"complist__container\">\n                    {filteredList().map((competition) => (\n                        <Comptetition key={competition.id} competition={competition} />\n                    ))}\n                </ul>\n            </Content>\n        </section>\n    );\n}\n\nexport default CompList;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from \"../../api/api\";\n\nconst initialState = {\n    matches: [],\n    competition: {},\n    status: \"idle\",\n    error: \"\",\n};\n\nexport const fetchMatches = createAsyncThunk(\"matches/matchesSlice\", ({ competitionId, dateFrom, dateTo }) => {\n    return api.getMatches({ competitionId, dateFrom, dateTo });\n});\n\nexport const matchesSlice = createSlice({\n    name: \"matches\",\n    initialState,\n    reducers: {\n        applyFilter: (state) => {\n            state.status = \"filtered\";\n        },\n    },\n    extraReducers: {\n        [fetchMatches.pending]: (state) => {\n            state.status = \"loading\";\n        },\n        [fetchMatches.fulfilled]: (state, action) => {\n            state.status = \"succeeded\";\n            state.matches = action.payload.matches ? action.payload.matches : [];\n            state.competition = action.payload.competition;\n            state.error = action.payload.message;\n        },\n        [fetchMatches.rejected]: (state, action) => {\n            state.status = \"failed\";\n            state.error = action.error.message;\n        },\n    },\n});\n\nexport default matchesSlice.reducer;\n","import React from \"react\";\n\nfunction DateInput(props) {\n    return <input className=\"date-picker__input\" {...props} type=\"date\" pattern=\"\\d{4}-\\d{2}-\\d{2}\"></input>;\n}\n\nexport default DateInput;\n","import React from \"react\";\nimport Button from \"../button/Button.jsx\";\nimport DateInput from \"../date-input/DateInput.jsx\";\n\nfunction DatePicker({ filter, setFilter, filterMatches, isValid }) {\n    return (\n        <form className=\"date-picker\" onSubmit={filterMatches}>\n            <label className=\"date-picker__label\">От</label>\n            <DateInput\n                value={filter.dateFrom}\n                onChange={(e) => {\n                    setFilter({ ...filter, dateFrom: e.target.value });\n                }}\n            />\n            <label className=\"date-picker__label\">До</label>\n            <DateInput\n                value={filter.dateTo}\n                onChange={(e) => {\n                    setFilter({ ...filter, dateTo: e.target.value });\n                }}\n            />\n            <Button isValid={isValid}></Button>\n        </form>\n    );\n}\n\nexport default DatePicker;\n","import React from \"react\";\n\nfunction Tablemobile({ onematch, teamId }) {\n    function formatDate(date) {\n        const format = new Date(Date.parse(date)).toLocaleString().slice(0, 10);\n        return format;\n    }\n\n    return (\n        <div className=\"table-mobile\">\n            <p className=\"table-mobile__text\">{formatDate(onematch.utcDate)}</p>\n            <div className=\"table-mobile__match\">\n                <p\n                    className={`table-mobile__text table-mobile__match_team ${\n                        teamId === onematch.homeTeam.id.toString() ? \"table__text_chosen\" : \"\"\n                    }`}\n                >\n                    {\" \"}\n                    {onematch.homeTeam.name}\n                </p>\n                <p className=\"table-mobile__text table-mobile__match_result\">{`${\n                    onematch.score.fullTime.homeTeam === null ? \"-\" : onematch.score.fullTime.homeTeam\n                } : ${onematch.score.fullTime.awayTeam === null ? \"-\" : onematch.score.fullTime.awayTeam}`}</p>\n                <p\n                    className={`table-mobile__text table-mobile__match_team ${\n                        teamId === onematch.awayTeam.id.toString() ? \"table__text_chosen\" : \"\"\n                    }`}\n                >\n                    {onematch.awayTeam.name}\n                </p>\n            </div>\n            <p className=\"table-mobile__text\">{onematch.status}</p>\n        </div>\n    );\n}\n\nexport default Tablemobile;\n","import React from \"react\";\n\nfunction Button(props) {\n    return (\n        <button\n            {...props}\n            className={`search-bar__button search-bar__add-button ${\n                props.limit >= props.length ? \"search-bar__add-button_disabled\" : \"\"\n            }`}\n        >\n            Еще\n        </button>\n    );\n}\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Content from \"../content/Content.jsx\";\nimport DatePicker from \"../date-picker/DatePicker.jsx\";\nimport Header from \"../../Header/Header.jsx\";\nimport Tablemobile from \"../table/Tablemobile.jsx\";\nimport AddButton from \"../button/AddButton.jsx\";\n\nfunction MatchList({\n    filterMatches,\n    competition,\n    matches,\n    filter,\n    setFilter,\n    limit,\n    setLimit,\n    teamId,\n    competitionStatus,\n    error,\n}) {\n    const params = useParams();\n\n    const [isValid, setValid] = useState(false);\n\n    useEffect(() => {\n        if (filter.dateFrom !== \"\" && filter.dateTo !== \"\" && filter.dateFrom <= filter.dateTo) {\n            setValid(true);\n        } else {\n            setValid(false);\n        }\n    }, [filter]);\n\n    function formatDate(date) {\n        const format = new Date(Date.parse(date)).toLocaleString().slice(0, 10);\n        return format;\n    }\n\n    function addLimit(num) {\n        setLimit(num + 10);\n    }\n\n    return (\n        <section className=\"table\">\n            <Header\n                competition={competition}\n                competitionId={params.competitionId}\n                teamId={params.teamId}\n                dateFrom={filter.dateFrom}\n                dateTo={filter.dateTo}\n            ></Header>\n            <div className=\"table__container\">\n                <DatePicker\n                    filter={filter}\n                    setFilter={setFilter}\n                    filterMatches={filterMatches}\n                    isValid={isValid}\n                ></DatePicker>\n            </div>\n            <Content competitionStatus={competitionStatus} data={matches} error={error}>\n                <table className=\"table__section table__section_disabled\">\n                    <thead className=\"table__head\">\n                        <tr className=\"table__label\">\n                            <th>Дата</th>\n                            <th>Дом</th>\n                            <th></th>\n                            <th>Гости</th>\n\n                            <th>Статус</th>\n                            <th>Счет</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"table__body\">\n                        {matches\n                            ? matches.slice(0, limit).map((onematch) => (\n                                  <tr key={onematch.id}>\n                                      <td className=\"table__text\">{formatDate(onematch.utcDate)}</td>\n\n                                      <td\n                                          className={`table__text ${\n                                              teamId === onematch.homeTeam.id.toString() ? \"table__text_chosen\" : \"\"\n                                          }`}\n                                      >\n                                          {onematch.homeTeam.name}\n                                      </td>\n                                      <td className=\"table__text\">vs</td>\n                                      <td\n                                          className={`table__text ${\n                                              teamId === onematch.awayTeam.id.toString() ? \"table__text_chosen\" : \"\"\n                                          }`}\n                                      >\n                                          {onematch.awayTeam.name}\n                                      </td>\n                                      <td className=\"table__text\">{onematch.status}</td>\n\n                                      <td className=\"table__text\">{`${\n                                          onematch.score.fullTime.homeTeam === null\n                                              ? \"-\"\n                                              : onematch.score.fullTime.homeTeam\n                                      } : ${\n                                          onematch.score.fullTime.awayTeam === null\n                                              ? \"-\"\n                                              : onematch.score.fullTime.awayTeam\n                                      }`}</td>\n                                  </tr>\n                              ))\n                            : error}\n                    </tbody>\n                </table>\n                <div className=\"table-mobile__container\">\n                    {matches\n                        ? matches\n                              .slice(0, limit)\n                              .map((onematch) => <Tablemobile key={onematch.id} onematch={onematch} teamId={teamId} />)\n                        : error}\n                </div>\n            </Content>\n\n            <AddButton\n                limit={limit}\n                length={matches.length}\n                onClick={() => {\n                    addLimit(limit);\n                }}\n            ></AddButton>\n        </section>\n    );\n}\n\nexport default MatchList;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchMatches } from \"../../store/slices/matchesSlice\";\n\nimport MatchList from \"../UI/matchlist/MatchList.jsx\";\n\nfunction Matches() {\n    const history = useHistory();\n    const params = useParams();\n    const dispatch = useDispatch();\n    const matches = useSelector((state) => state.matches.matches);\n    const competition = useSelector((state) => state.matches.competition);\n    const competitionStatus = useSelector((state) => state.matches.status);\n    const error = useSelector((state) => state.matches.error);\n    const [filter, setFilter] = useState({ dateFrom: params.dateFrom || \"\", dateTo: params.dateTo || \"\" });\n    const [limit, setLimit] = useState(10);\n\n    useEffect(() => {\n        if (competitionStatus === \"idle\") {\n            dispatch(\n                fetchMatches({ competitionId: params.competitionId, dateFrom: filter.dateFrom, dateTo: filter.dateTo }),\n            );\n        } else if (!error && competitionStatus === \"succeeded\" && params.competitionId !== competition.id.toString()) {\n            dispatch(\n                fetchMatches({ competitionId: params.competitionId, dateFrom: filter.dateFrom, dateTo: filter.dateTo }),\n            );\n        }\n    }, [dispatch, competitionStatus, params.competitionId]);\n\n    function filterMatches(e) {\n        e.preventDefault();\n        dispatch(\n            fetchMatches({ competitionId: params.competitionId, dateFrom: filter.dateFrom, dateTo: filter.dateTo }),\n        );\n        history.push(`/competitions/${params.competitionId}/matches/${filter.dateFrom}/${filter.dateTo}`);\n        setLimit(10);\n    }\n\n    return (\n        <MatchList\n            matches={matches}\n            competition={competition}\n            filter={filter}\n            setFilter={setFilter}\n            filterMatches={filterMatches}\n            limit={limit}\n            setLimit={setLimit}\n            competitionStatus={competitionStatus}\n            error={error}\n        />\n    );\n}\n\nexport default Matches;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from \"../../api/api\";\n\nconst initialState = {\n    standings: [],\n    competition: {},\n    status: \"idle\",\n    error: \"\",\n};\n\nexport const getSchedule = createAsyncThunk(\"standings/standingsSlice\", async (competitionId) => {\n    return api.getSchedule(competitionId);\n});\n\nexport const standingsSlice = createSlice({\n    name: \"standings\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [getSchedule.pending]: (state) => {\n            state.status = \"loading\";\n        },\n        [getSchedule.fulfilled]: (state, action) => {\n            state.status = \"succeeded\";\n            const filteredStandings = action.payload.standings\n                ? action.payload.standings.map((standing) => standing.table)\n                : [];\n            state.standings = filteredStandings.shift();\n            state.competition = action.payload.competition;\n            state.error = action.payload.message;\n        },\n        [getSchedule.rejected]: (state, action) => {\n            state.status = \"failed\";\n            state.error = action.error.message;\n        },\n    },\n});\n\nexport default standingsSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getSchedule } from \"../../store/slices/standingsSlice\";\nimport Header from \"../Header/Header.jsx\";\nimport Content from \"../UI/content/Content.jsx\";\n\nfunction Standings() {\n    const { competitionId } = useParams();\n    const dispatch = useDispatch();\n    const standings = useSelector((state) => state.standings.standings);\n    const competition = useSelector((state) => state.standings.competition);\n    const competitionStatus = useSelector((state) => state.standings.status);\n    const error = useSelector((state) => state.standings.error);\n\n    useEffect(() => {\n        if (competitionStatus === \"idle\") {\n            dispatch(getSchedule(competitionId));\n        } else if (!error && competitionStatus === \"succeeded\" && competitionId !== competition.id.toString()) {\n            dispatch(getSchedule(competitionId));\n        }\n    }, [dispatch, competitionStatus, competitionId]);\n\n    return (\n        <section className=\"table\">\n            <Header competition={competition} competitionId={competitionId}></Header>\n            <Content competitionStatus={competitionStatus} data={standings} error={error}>\n                <table className=\"table__section\">\n                    <thead className=\"table__head\">\n                        <tr className=\"table__label\">\n                            <th>№</th>\n                            <th>Команда</th>\n                            <th>М</th>\n                            <th>В</th>\n                            <th>Н</th>\n                            <th>П</th>\n                            <th>О</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"table__body\">\n                        {standings !== undefined\n                            ? standings.map((team) => (\n                                  <tr key={team.team.id}>\n                                      <td className=\"table__text\">{team.position}</td>\n                                      <td className=\"table__team\">\n                                          {\" \"}\n                                          <Link className=\"table__link\" to={`/teams/${team.team.id}/matches/`}>\n                                              <img className=\"table__image\" src={team.team.crestUrl} />\n                                          </Link>\n                                          <Link className=\"table__link\" to={`/teams/${team.team.id}/matches/`}>\n                                              {team.team.name}\n                                          </Link>\n                                      </td>\n                                      <td className=\"table__text\">{team.playedGames}</td>\n                                      <td className=\"table__text\">{team.won}</td>\n                                      <td className=\"table__text\">{team.draw}</td>\n                                      <td className=\"table__text\">{team.lost}</td>\n                                      <td className=\"table__text\">{team.points}</td>\n                                  </tr>\n                              ))\n                            : error}\n                    </tbody>\n                </table>\n            </Content>\n        </section>\n    );\n}\n\nexport default Standings;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from \"../../api/api\";\n\nconst initialState = {\n    calendar: [],\n    status: \"idle\",\n    error: \"\",\n};\n\nexport const fetchSingleTeam = createAsyncThunk(\"team/singleTeamSlice\", async ({ teamId, dateFrom, dateTo, limit }) => {\n    return api.getTeamMatches({ teamId, dateFrom, dateTo, limit });\n});\n\nexport const singleTeamSlice = createSlice({\n    name: \"team\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchSingleTeam.pending]: (state) => {\n            state.status = \"loading\";\n        },\n        [fetchSingleTeam.fulfilled]: (state, action) => {\n            state.status = \"succeeded\";\n            state.calendar = action.payload.matches ? action.payload.matches : [];\n            state.error = action.payload.message;\n        },\n        [fetchSingleTeam.rejected]: (state, action) => {\n            state.status = \"failed\";\n            state.error = action.error.message;\n        },\n    },\n});\n\nexport default singleTeamSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchSingleTeam } from \"../../store/slices/singleTeamSlice\";\nimport MatchList from \"../UI/matchlist/MatchList.jsx\";\n\nfunction TeamCalendar() {\n    const history = useHistory();\n    const params = useParams();\n    const dispatch = useDispatch();\n    const matches = useSelector((state) => state.team.calendar);\n    const error = useSelector((state) => state.team.error);\n    const competitionStatus = useSelector((state) => state.team.status);\n    const [filter, setFilter] = useState({ dateFrom: params.dateFrom || \"\", dateTo: params.dateTo || \"\" });\n    const [limit, setLimit] = useState(10);\n\n    useEffect(() => {\n        dispatch(fetchSingleTeam({ teamId: params.teamId, dateFrom: filter.dateFrom, dateTo: filter.dateTo }));\n    }, [dispatch]);\n\n    function filterMatches(e) {\n        e.preventDefault();\n        dispatch(fetchSingleTeam({ teamId: params.teamId, dateFrom: filter.dateFrom, dateTo: filter.dateTo }));\n        history.push(`/teams/${params.teamId}/matches/${filter.dateFrom}/${filter.dateTo}`);\n    }\n\n    return (\n        <MatchList\n            matches={matches}\n            filter={filter}\n            setFilter={setFilter}\n            filterMatches={filterMatches}\n            limit={limit}\n            setLimit={setLimit}\n            error={error}\n            teamId={params.teamId}\n            competitionStatus={competitionStatus}\n        />\n    );\n}\nexport default TeamCalendar;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from \"../../api/api\";\n\nconst initialState = {\n    teams: [],\n    season: [],\n    competition: {},\n    status: \"idle\",\n    error: \"\",\n};\n\nexport const fetchTeams = createAsyncThunk(\"teams/teamsSlice\", async (competitionId) => {\n    return api.getTeams(competitionId);\n});\n\nexport const teamsSlice = createSlice({\n    name: \"teams\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchTeams.pending]: (state) => {\n            state.status = \"loading\";\n        },\n        [fetchTeams.fulfilled]: (state, action) => {\n            state.status = \"succeeded\";\n            state.teams = action.payload.teams ? action.payload.teams : [];\n            state.season = action.payload.season;\n            state.competition = action.payload.competition;\n            state.error = action.payload.message;\n        },\n        [fetchTeams.rejected]: (state, action) => {\n            state.status = \"failed\";\n            state.error = action.error.message;\n        },\n    },\n});\n\nexport default teamsSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchTeams } from \"../../store/slices/teamsSlice\";\nimport SearchBar from \"../SearchBar/SearchBar.jsx\";\nimport Header from \"../Header/Header.jsx\";\nimport Content from \"../UI/content/Content.jsx\";\n\nfunction TeamList() {\n    const { competitionId, filtered } = useParams();\n    const dispatch = useDispatch();\n    const teams = useSelector((state) => state.teams.teams);\n    const competition = useSelector((state) => state.teams.competition);\n    const teamStatus = useSelector((state) => state.teams.status);\n    const error = useSelector((state) => state.teams.error);\n    const [filter, setFilter] = useState(filtered || \"\");\n    const [filteredData, setFilteredData] = useState();\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (teamStatus === \"idle\") {\n            dispatch(fetchTeams(competitionId));\n        } else if (!error && teamStatus === \"succeeded\" && competitionId !== competition.id.toString()) {\n            dispatch(fetchTeams(competitionId));\n        }\n    }, [dispatch, teamStatus, competitionId]);\n\n    useEffect(() => {\n        if (filtered !== \"\" && filtered !== undefined) {\n            const filteredList = teams.filter((team) => team.name.toLowerCase().includes(filter.toLowerCase()));\n            setFilteredData(filteredList);\n        }\n    }, [teamStatus, competitionId]);\n\n    const getFilteredList = (e) => {\n        e.preventDefault();\n        const filteredList = teams.filter((team) => team.name.toLowerCase().includes(filter.toLowerCase()));\n        setFilteredData(filteredList);\n        history.push(`/competitions/${competitionId}/teams/${filter}`);\n    };\n\n    const filteredList = () => {\n        let data;\n        if (filteredData) {\n            data = filteredData;\n        } else if (teams !== undefined) {\n            data = teams;\n        } else {\n            data = error;\n        }\n        return data;\n    };\n\n    return (\n        <section className=\"table\">\n            <Header competition={competition} competitionId={competitionId}></Header>\n\n            <div className=\"table__container\">\n                <SearchBar filter={filter} setFilter={setFilter} getFilteredList={getFilteredList}></SearchBar>\n            </div>\n            <Content competitionStatus={teamStatus} data={filteredList()} error={error} competition={competition}>\n                <table className=\"table__section\">\n                    <thead className=\"table__head\">\n                        <tr className=\"table__label\">\n                            <th>Команда</th>\n                            <th>Тег</th>\n                            <th>Основан</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"table__body\">\n                        {filteredList().map((team) => (\n                            <tr className=\"table__item\" key={team.id}>\n                                <td className=\"table__team\">\n                                    <Link className=\"table__link\" to={`/teams/${team.id}/matches/`}>\n                                        <img className=\"table__image\" src={team.crestUrl} />\n                                    </Link>\n                                    <Link className=\"table__link\" to={`/teams/${team.id}/matches/`}>\n                                        {team.name}\n                                    </Link>\n                                </td>\n                                <td className=\"table__text\">{team.tla}</td>\n                                <td className=\"table__text\">{team.founded}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Content>\n        </section>\n    );\n}\n\nexport default TeamList;\n","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer__container\">\n                <p className=\"footer__text\">Dmitriy Khomyakov</p>\n                <p className=\"footer__text\">\n                    Football data provided by the{\" \"}\n                    <a className=\"footer__link\" href=\"https://www.football-data.org/\" target=\"_blank\" rel=\"noreferrer\">\n                        Football-Data.org\n                    </a>{\" \"}\n                    API\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CompList from \"../CompList/CompList.jsx\";\nimport Matches from \"../Matches/Matches.jsx\";\nimport Standings from \"../Standings/Standings.jsx\";\nimport TeamCalendar from \"../TeamCalendar/TeamCalendar.jsx\";\nimport TeamList from \"../TeamList/TeamList.jsx\";\nimport Footer from \"../Footer/Footer.jsx\";\n\nfunction App() {\n    return (\n        <>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/:filtered?\" render={() => <CompList />} />\n                    <Route exact path=\"/competitions/:competitionId/teams/:filtered?\" component={TeamList} />\n                    <Route exact path=\"/competitions/:competitionId/standings/\" component={Standings} />\n                    <Route exact path=\"/competitions/:competitionId/matches/:dateFrom?/:dateTo?\" component={Matches} />\n                    <Route exact path=\"/teams/:teamId/matches/:dateFrom?/:dateTo?\" component={TeamCalendar} />\n                </Switch>\n            </div>\n            <Footer></Footer>\n        </>\n    );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport competitionReducer from \"./slices/competitionsSlice\";\nimport teamsReducer from \"./slices/teamsSlice\";\nimport standingsReducer from \"./slices/standingsSlice\";\nimport matchesReducer from \"./slices/matchesSlice\";\nimport singleTeamReducer from \"./slices/singleTeamSlice\";\n\nconst store = configureStore({\n    reducer: {\n        competitions: competitionReducer,\n        teams: teamsReducer,\n        standings: standingsReducer,\n        matches: matchesReducer,\n        team: singleTeamReducer,\n    },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App.jsx\";\nimport store from \"./store/store\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>,\n\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}